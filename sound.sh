#!/bin/bash

# –í–∫–ª—é—á–∞–µ–º —Ç–∏–ø–æ strict mode
set -euo pipefail

readonly SCRIPT_NAME=$(basename "$0")
readonly ROOT=$(dirname "$0")

# –ò–º–ø–æ—Ä—Ç—ã –º–æ–¥—É–ª–µ–π
source "$ROOT/config.sh"
source "$ROOT/utils.sh"

# –°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –¥–∞–Ω–Ω–æ–º—É —Å–∫—Ä–∏–ø—Ç—É
usage() {
    cat << EOF
    Usage: $SCRIPT_NAME [OPTIONS] <required_arg>

    Description of what this script does.

    OPTIONS:
        -h, --help          Show this help message
        -d, --debug         Enable debug mode
        -l, --loop          Enable loop mode

EOF
}

FILES=()
DEBUG=false
LOOP=false

play_audio() {
    local file="$1"
    local pid_file="$2"

    if [[ ! -f "$file" ]]; then
        __msg_error "–§–∞–π–ª '$file' –Ω–µ –Ω–∞–π–¥–µ–Ω."
        return 240
    fi

    # –µ—Å–ª–∏ –µ—Å—Ç—å —Å—Ç–∞—Ä—ã–π PID ‚Äî –ø–æ–ø—Ä–æ–±—É–µ–º –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
    stop_audio "$pid_file"

    if command -v afplay &>/dev/null; then
        echo "üöÄ –ó–∞–ø—É—Å–∫–∞—é $(basename "${selected_file%%.*}")..."

        if [[ $LOOP ]]; then
            while true; do
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º PID
                echo $! > "$pid_file"
                afplay "$file" &>/dev/null
            done &
        else
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º PID
            echo $! > "$pid_file"
            afplay "$file" &>/dev/null
        fi
    fi
}

stop_audio() {
    local pid_file="$1"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ —Å PID
    if [[ ! -f "$pid_file" ]]; then
        $DEBUG && __msg_error "–§–∞–π–ª —Å PID –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        return 0 
    fi

    local pid=$(<"$pid_file")

    if [[ -z $pid ]]; then
        $DEBUG && __msg_error "PID –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        rm -f "$pid_file"
        return 0
    fi

    if ! kill -0 "$pid" &>/dev/null; then
        $DEBUG && echo "–ü—Ä–æ—Ü–µ—Å—Å —Å PID $pid –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–¥–∞–ª—è—é PID-—Ñ–∞–π–ª."
        rm -f "$pid_file"
        return 0
    fi

    # –ü–æ–ª—É—á–∞–µ–º PID-—ã –¥–æ—á–µ—Ä–Ω–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –¥–∞–Ω–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
    local child_pids=$(pgrep -P "$pid")

    # –ó–∞–≤–µ—Ä–∞—à–µ–º –¥–æ—á–µ—Ä–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
    if [ -n "$child_pids" ]; then
        kill -SIGTERM "$child_pids"
    fi

    # –ó–∞–≤–µ—Ä—à–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å
    kill -SIGTERM "$pid"
    rm -f "$pid_file"

    echo "üíî –ö–æ–Ω–µ—Ü –≤–µ—á–µ—Ä–∏–Ω–∫–µ..."
    return 0
}

status_audio() {
    local pid_file="$1"

    if [[ -f "$pid_file" ]]; then
        local pid=$(cat "$pid_file")
        if kill -0 "$pid" &>/dev/null; then
            echo "–ê—É–¥–∏–æ –∏–≥—Ä–∞–µ—Ç (PID $pid)."
        else
            $DEBUG && echo "PID-—Ñ–∞–π–ª –µ—Å—Ç—å, –Ω–æ –ø—Ä–æ—Ü–µ—Å—Å $pid –Ω–µ –Ω–∞–π–¥–µ–Ω."
        fi
    else
        echo "–ê—É–¥–∏–æ —Å–µ–π—á–∞—Å –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ."
    fi
}

list_files() {
    local directory="$1"

    if [[ ! -d $directory ]]; then
        __msg_error "–ü—É—Ç—å –Ω–µ –≤–µ–¥–µ—Ç –∫ –ø–∞–ø–∫–µ."
        return 240
    fi

    local index=1
    for file in "$directory"/*.{mp3,wav,ogg,flac}; do
        if [[ -f "$file" ]]; then
            FILES+=("$file")
            
            if [[ ${#FILES[@]} -eq 1 ]]; then
                echo "–í—ã–±–∏—Ä–∞–π, —á—Ç–æ –µ—Å—Ç—å —Ç—É—Ç ($directory):"    
            fi
            
            local basename_file="${file##*/}" 
            echo "  [$index] ${basename_file%%.*}"
            ((index++))
        fi
    done
    
    if [[ ${#FILES[@]} -eq 0 ]]; then
        __msg_error "–§–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã."
        return 240
    fi
}

select_file() {
    local pid_file="$1"

    read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ñ–∞–π–ª–∞ üëâ " NUMBER 
    if [[ "$NUMBER" =~ ^[0-9]+$ ]] && (( NUMBER >= 1 && NUMBER <= ${#FILES[@]} )); then
        local selected_file=${FILES[$((NUMBER-1))]}
        play_audio "$selected_file" "$pid_file"
    else
        echo "ü´§ –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä."
    fi
}

show_prompt() {
    while true; do
        read -p "(list/stop/status): " INPUT

        case "$INPUT" in
            stop)
                stop_audio "$AUDIO_PID_FILE"
                ;;
            status)
                status_audio "$AUDIO_PID_FILE"
                ;;
            list)
                list_files "$MUSIC_DIR" && select_file "$AUDIO_PID_FILE"
                ;;
        esac
    done
}

main() {
    clear
    $DEBUG && echo -e "üõ†  DEBUG MODE  üõ†\n"
    
    if [[ ! -f $AUDIO_PID_FILE ]]; then
        list_files "$MUSIC_DIR" && select_file "$AUDIO_PID_FILE" && show_prompt
    else
        show_prompt
    fi
}

# Parse command line arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        -h|--help)
            usage
            exit 0
            ;;
        -d|--debug)
            DEBUG=true
            break
            ;;
        -l|--loop)
            LOOP=true
            break
            ;;
        *)
            break
            ;;
    esac
done

# Execute main function if script is run directly
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main "$@"
fi